//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.42
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace 酒店管理系统 {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("DataSet2")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet2 : System.Data.DataSet {
        
        private 预定单DataTable table预定单;
        
        private 入住单DataTable table入住单;
        
        private 客房类型DataTable table客房类型;
        
        private 帐单明细DataTable table帐单明细;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet2() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet2(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["预定单"] != null)) {
                    base.Tables.Add(new 预定单DataTable(ds.Tables["预定单"]));
                }
                if ((ds.Tables["入住单"] != null)) {
                    base.Tables.Add(new 入住单DataTable(ds.Tables["入住单"]));
                }
                if ((ds.Tables["客房类型"] != null)) {
                    base.Tables.Add(new 客房类型DataTable(ds.Tables["客房类型"]));
                }
                if ((ds.Tables["帐单明细"] != null)) {
                    base.Tables.Add(new 帐单明细DataTable(ds.Tables["帐单明细"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 预定单DataTable 预定单 {
            get {
                return this.table预定单;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 入住单DataTable 入住单 {
            get {
                return this.table入住单;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 客房类型DataTable 客房类型 {
            get {
                return this.table客房类型;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 帐单明细DataTable 帐单明细 {
            get {
                return this.table帐单明细;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            DataSet2 cln = ((DataSet2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["预定单"] != null)) {
                    base.Tables.Add(new 预定单DataTable(ds.Tables["预定单"]));
                }
                if ((ds.Tables["入住单"] != null)) {
                    base.Tables.Add(new 入住单DataTable(ds.Tables["入住单"]));
                }
                if ((ds.Tables["客房类型"] != null)) {
                    base.Tables.Add(new 客房类型DataTable(ds.Tables["客房类型"]));
                }
                if ((ds.Tables["帐单明细"] != null)) {
                    base.Tables.Add(new 帐单明细DataTable(ds.Tables["帐单明细"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table预定单 = ((预定单DataTable)(base.Tables["预定单"]));
            if ((initTable == true)) {
                if ((this.table预定单 != null)) {
                    this.table预定单.InitVars();
                }
            }
            this.table入住单 = ((入住单DataTable)(base.Tables["入住单"]));
            if ((initTable == true)) {
                if ((this.table入住单 != null)) {
                    this.table入住单.InitVars();
                }
            }
            this.table客房类型 = ((客房类型DataTable)(base.Tables["客房类型"]));
            if ((initTable == true)) {
                if ((this.table客房类型 != null)) {
                    this.table客房类型.InitVars();
                }
            }
            this.table帐单明细 = ((帐单明细DataTable)(base.Tables["帐单明细"]));
            if ((initTable == true)) {
                if ((this.table帐单明细 != null)) {
                    this.table帐单明细.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet2";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSet2.xsd";
            this.Locale = new System.Globalization.CultureInfo("zh-CN");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.table预定单 = new 预定单DataTable();
            base.Tables.Add(this.table预定单);
            this.table入住单 = new 入住单DataTable();
            base.Tables.Add(this.table入住单);
            this.table客房类型 = new 客房类型DataTable();
            base.Tables.Add(this.table客房类型);
            this.table帐单明细 = new 帐单明细DataTable();
            base.Tables.Add(this.table帐单明细);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize预定单() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize入住单() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize客房类型() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize帐单明细() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            DataSet2 ds = new DataSet2();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void 预定单RowChangeEventHandler(object sender, 预定单RowChangeEvent e);
        
        public delegate void 入住单RowChangeEventHandler(object sender, 入住单RowChangeEvent e);
        
        public delegate void 客房类型RowChangeEventHandler(object sender, 客房类型RowChangeEvent e);
        
        public delegate void 帐单明细RowChangeEventHandler(object sender, 帐单明细RowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 预定单DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn column预定单号;
            
            private System.Data.DataColumn column会员编号;
            
            private System.Data.DataColumn column客房类型;
            
            private System.Data.DataColumn column抵店时间;
            
            private System.Data.DataColumn column离店时间;
            
            private System.Data.DataColumn column单据状态;
            
            private System.Data.DataColumn column入住人数;
            
            private System.Data.DataColumn column客房编号;
            
            private System.Data.DataColumn column客房价格;
            
            private System.Data.DataColumn column入住价格;
            
            private System.Data.DataColumn column折扣;
            
            private System.Data.DataColumn column折扣原因;
            
            private System.Data.DataColumn column是否加床;
            
            private System.Data.DataColumn column加床价格;
            
            private System.Data.DataColumn column预收款;
            
            private System.Data.DataColumn column预定人;
            
            private System.Data.DataColumn column预定公司;
            
            private System.Data.DataColumn column联系电话;
            
            private System.Data.DataColumn column备注;
            
            private System.Data.DataColumn column操作员;
            
            private System.Data.DataColumn column业务员;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预定单DataTable() {
                this.TableName = "预定单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 预定单DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 预定单DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 预定单号Column {
                get {
                    return this.column预定单号;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 会员编号Column {
                get {
                    return this.column会员编号;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 客房类型Column {
                get {
                    return this.column客房类型;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 抵店时间Column {
                get {
                    return this.column抵店时间;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 离店时间Column {
                get {
                    return this.column离店时间;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 入住人数Column {
                get {
                    return this.column入住人数;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 客房编号Column {
                get {
                    return this.column客房编号;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 客房价格Column {
                get {
                    return this.column客房价格;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 入住价格Column {
                get {
                    return this.column入住价格;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 折扣Column {
                get {
                    return this.column折扣;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 折扣原因Column {
                get {
                    return this.column折扣原因;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 是否加床Column {
                get {
                    return this.column是否加床;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 加床价格Column {
                get {
                    return this.column加床价格;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 预收款Column {
                get {
                    return this.column预收款;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 预定人Column {
                get {
                    return this.column预定人;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 预定公司Column {
                get {
                    return this.column预定公司;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 联系电话Column {
                get {
                    return this.column联系电话;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 操作员Column {
                get {
                    return this.column操作员;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 业务员Column {
                get {
                    return this.column业务员;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预定单Row this[int index] {
                get {
                    return ((预定单Row)(this.Rows[index]));
                }
            }
            
            public event 预定单RowChangeEventHandler 预定单RowChanging;
            
            public event 预定单RowChangeEventHandler 预定单RowChanged;
            
            public event 预定单RowChangeEventHandler 预定单RowDeleting;
            
            public event 预定单RowChangeEventHandler 预定单RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add预定单Row(预定单Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预定单Row Add预定单Row(
                        string 预定单号, 
                        int 会员编号, 
                        string 客房类型, 
                        System.DateTime 抵店时间, 
                        System.DateTime 离店时间, 
                        string 单据状态, 
                        int 入住人数, 
                        string 客房编号, 
                        decimal 客房价格, 
                        decimal 入住价格, 
                        decimal 折扣, 
                        string 折扣原因, 
                        bool 是否加床, 
                        decimal 加床价格, 
                        decimal 预收款, 
                        string 预定人, 
                        string 预定公司, 
                        string 联系电话, 
                        string 备注, 
                        string 操作员, 
                        string 业务员) {
                预定单Row row预定单Row = ((预定单Row)(this.NewRow()));
                row预定单Row.ItemArray = new object[] {
                        预定单号,
                        会员编号,
                        客房类型,
                        抵店时间,
                        离店时间,
                        单据状态,
                        入住人数,
                        客房编号,
                        客房价格,
                        入住价格,
                        折扣,
                        折扣原因,
                        是否加床,
                        加床价格,
                        预收款,
                        预定人,
                        预定公司,
                        联系电话,
                        备注,
                        操作员,
                        业务员};
                this.Rows.Add(row预定单Row);
                return row预定单Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预定单Row FindBy预定单号(string 预定单号) {
                return ((预定单Row)(this.Rows.Find(new object[] {
                            预定单号})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                预定单DataTable cln = ((预定单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 预定单DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column预定单号 = base.Columns["预定单号"];
                this.column会员编号 = base.Columns["会员编号"];
                this.column客房类型 = base.Columns["客房类型"];
                this.column抵店时间 = base.Columns["抵店时间"];
                this.column离店时间 = base.Columns["离店时间"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column入住人数 = base.Columns["入住人数"];
                this.column客房编号 = base.Columns["客房编号"];
                this.column客房价格 = base.Columns["客房价格"];
                this.column入住价格 = base.Columns["入住价格"];
                this.column折扣 = base.Columns["折扣"];
                this.column折扣原因 = base.Columns["折扣原因"];
                this.column是否加床 = base.Columns["是否加床"];
                this.column加床价格 = base.Columns["加床价格"];
                this.column预收款 = base.Columns["预收款"];
                this.column预定人 = base.Columns["预定人"];
                this.column预定公司 = base.Columns["预定公司"];
                this.column联系电话 = base.Columns["联系电话"];
                this.column备注 = base.Columns["备注"];
                this.column操作员 = base.Columns["操作员"];
                this.column业务员 = base.Columns["业务员"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column预定单号 = new System.Data.DataColumn("预定单号", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column预定单号);
                this.column会员编号 = new System.Data.DataColumn("会员编号", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column会员编号);
                this.column客房类型 = new System.Data.DataColumn("客房类型", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column客房类型);
                this.column抵店时间 = new System.Data.DataColumn("抵店时间", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column抵店时间);
                this.column离店时间 = new System.Data.DataColumn("离店时间", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column离店时间);
                this.column单据状态 = new System.Data.DataColumn("单据状态", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column入住人数 = new System.Data.DataColumn("入住人数", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column入住人数);
                this.column客房编号 = new System.Data.DataColumn("客房编号", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column客房编号);
                this.column客房价格 = new System.Data.DataColumn("客房价格", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column客房价格);
                this.column入住价格 = new System.Data.DataColumn("入住价格", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column入住价格);
                this.column折扣 = new System.Data.DataColumn("折扣", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column折扣);
                this.column折扣原因 = new System.Data.DataColumn("折扣原因", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column折扣原因);
                this.column是否加床 = new System.Data.DataColumn("是否加床", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column是否加床);
                this.column加床价格 = new System.Data.DataColumn("加床价格", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column加床价格);
                this.column预收款 = new System.Data.DataColumn("预收款", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column预收款);
                this.column预定人 = new System.Data.DataColumn("预定人", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column预定人);
                this.column预定公司 = new System.Data.DataColumn("预定公司", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column预定公司);
                this.column联系电话 = new System.Data.DataColumn("联系电话", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column联系电话);
                this.column备注 = new System.Data.DataColumn("备注", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column操作员 = new System.Data.DataColumn("操作员", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column操作员);
                this.column业务员 = new System.Data.DataColumn("业务员", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column业务员);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.column预定单号}, true));
                this.column预定单号.AllowDBNull = false;
                this.column预定单号.Unique = true;
                this.column客房类型.AllowDBNull = false;
                this.column抵店时间.AllowDBNull = false;
                this.column是否加床.DefaultValue = ((bool)(false));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预定单Row New预定单Row() {
                return ((预定单Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 预定单Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(预定单Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.预定单RowChanged != null)) {
                    this.预定单RowChanged(this, new 预定单RowChangeEvent(((预定单Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.预定单RowChanging != null)) {
                    this.预定单RowChanging(this, new 预定单RowChangeEvent(((预定单Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.预定单RowDeleted != null)) {
                    this.预定单RowDeleted(this, new 预定单RowChangeEvent(((预定单Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.预定单RowDeleting != null)) {
                    this.预定单RowDeleting(this, new 预定单RowChangeEvent(((预定单Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove预定单Row(预定单Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "预定单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 入住单DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn column入住单号;
            
            private System.Data.DataColumn column预定单号;
            
            private System.Data.DataColumn column会员编号;
            
            private System.Data.DataColumn column客房类型;
            
            private System.Data.DataColumn column抵店时间;
            
            private System.Data.DataColumn column离店时间;
            
            private System.Data.DataColumn column单据状态;
            
            private System.Data.DataColumn column入住人数;
            
            private System.Data.DataColumn column客房编号;
            
            private System.Data.DataColumn column客房价格;
            
            private System.Data.DataColumn column入住价格;
            
            private System.Data.DataColumn column折扣;
            
            private System.Data.DataColumn column折扣原因;
            
            private System.Data.DataColumn column是否加床;
            
            private System.Data.DataColumn column加床价格;
            
            private System.Data.DataColumn column预收款;
            
            private System.Data.DataColumn column预定人;
            
            private System.Data.DataColumn column预定公司;
            
            private System.Data.DataColumn column联系电话;
            
            private System.Data.DataColumn column备注;
            
            private System.Data.DataColumn column操作员;
            
            private System.Data.DataColumn column业务员;
            
            private System.Data.DataColumn column早餐;
            
            private System.Data.DataColumn column叫醒;
            
            private System.Data.DataColumn column保密;
            
            private System.Data.DataColumn columnvip;
            
            private System.Data.DataColumn column电话等级;
            
            private System.Data.DataColumn column特要说明;
            
            private System.Data.DataColumn column应收帐款;
            
            private System.Data.DataColumn column是否结帐;
            
            private System.Data.DataColumn column结帐金额;
            
            private System.Data.DataColumn column结帐日期;
            
            private System.Data.DataColumn column付款方式;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 入住单DataTable() {
                this.TableName = "入住单";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 入住单DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 入住单DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 入住单号Column {
                get {
                    return this.column入住单号;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 预定单号Column {
                get {
                    return this.column预定单号;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 会员编号Column {
                get {
                    return this.column会员编号;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 客房类型Column {
                get {
                    return this.column客房类型;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 抵店时间Column {
                get {
                    return this.column抵店时间;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 离店时间Column {
                get {
                    return this.column离店时间;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 单据状态Column {
                get {
                    return this.column单据状态;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 入住人数Column {
                get {
                    return this.column入住人数;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 客房编号Column {
                get {
                    return this.column客房编号;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 客房价格Column {
                get {
                    return this.column客房价格;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 入住价格Column {
                get {
                    return this.column入住价格;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 折扣Column {
                get {
                    return this.column折扣;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 折扣原因Column {
                get {
                    return this.column折扣原因;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 是否加床Column {
                get {
                    return this.column是否加床;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 加床价格Column {
                get {
                    return this.column加床价格;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 预收款Column {
                get {
                    return this.column预收款;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 预定人Column {
                get {
                    return this.column预定人;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 预定公司Column {
                get {
                    return this.column预定公司;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 联系电话Column {
                get {
                    return this.column联系电话;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 操作员Column {
                get {
                    return this.column操作员;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 业务员Column {
                get {
                    return this.column业务员;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 早餐Column {
                get {
                    return this.column早餐;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 叫醒Column {
                get {
                    return this.column叫醒;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 保密Column {
                get {
                    return this.column保密;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn vipColumn {
                get {
                    return this.columnvip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 电话等级Column {
                get {
                    return this.column电话等级;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 特要说明Column {
                get {
                    return this.column特要说明;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 应收帐款Column {
                get {
                    return this.column应收帐款;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 是否结帐Column {
                get {
                    return this.column是否结帐;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 结帐金额Column {
                get {
                    return this.column结帐金额;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 结帐日期Column {
                get {
                    return this.column结帐日期;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 付款方式Column {
                get {
                    return this.column付款方式;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 入住单Row this[int index] {
                get {
                    return ((入住单Row)(this.Rows[index]));
                }
            }
            
            public event 入住单RowChangeEventHandler 入住单RowChanging;
            
            public event 入住单RowChangeEventHandler 入住单RowChanged;
            
            public event 入住单RowChangeEventHandler 入住单RowDeleting;
            
            public event 入住单RowChangeEventHandler 入住单RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add入住单Row(入住单Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 入住单Row Add入住单Row(
                        string 入住单号, 
                        string 预定单号, 
                        int 会员编号, 
                        string 客房类型, 
                        System.DateTime 抵店时间, 
                        System.DateTime 离店时间, 
                        string 单据状态, 
                        int 入住人数, 
                        string 客房编号, 
                        decimal 客房价格, 
                        decimal 入住价格, 
                        decimal 折扣, 
                        string 折扣原因, 
                        bool 是否加床, 
                        decimal 加床价格, 
                        decimal 预收款, 
                        string 预定人, 
                        string 预定公司, 
                        string 联系电话, 
                        string 备注, 
                        string 操作员, 
                        string 业务员, 
                        bool 早餐, 
                        bool 叫醒, 
                        bool 保密, 
                        bool vip, 
                        string 电话等级, 
                        string 特要说明, 
                        decimal 应收帐款, 
                        bool 是否结帐, 
                        decimal 结帐金额, 
                        System.DateTime 结帐日期, 
                        string 付款方式) {
                入住单Row row入住单Row = ((入住单Row)(this.NewRow()));
                row入住单Row.ItemArray = new object[] {
                        入住单号,
                        预定单号,
                        会员编号,
                        客房类型,
                        抵店时间,
                        离店时间,
                        单据状态,
                        入住人数,
                        客房编号,
                        客房价格,
                        入住价格,
                        折扣,
                        折扣原因,
                        是否加床,
                        加床价格,
                        预收款,
                        预定人,
                        预定公司,
                        联系电话,
                        备注,
                        操作员,
                        业务员,
                        早餐,
                        叫醒,
                        保密,
                        vip,
                        电话等级,
                        特要说明,
                        应收帐款,
                        是否结帐,
                        结帐金额,
                        结帐日期,
                        付款方式};
                this.Rows.Add(row入住单Row);
                return row入住单Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 入住单Row FindBy入住单号(string 入住单号) {
                return ((入住单Row)(this.Rows.Find(new object[] {
                            入住单号})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                入住单DataTable cln = ((入住单DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 入住单DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column入住单号 = base.Columns["入住单号"];
                this.column预定单号 = base.Columns["预定单号"];
                this.column会员编号 = base.Columns["会员编号"];
                this.column客房类型 = base.Columns["客房类型"];
                this.column抵店时间 = base.Columns["抵店时间"];
                this.column离店时间 = base.Columns["离店时间"];
                this.column单据状态 = base.Columns["单据状态"];
                this.column入住人数 = base.Columns["入住人数"];
                this.column客房编号 = base.Columns["客房编号"];
                this.column客房价格 = base.Columns["客房价格"];
                this.column入住价格 = base.Columns["入住价格"];
                this.column折扣 = base.Columns["折扣"];
                this.column折扣原因 = base.Columns["折扣原因"];
                this.column是否加床 = base.Columns["是否加床"];
                this.column加床价格 = base.Columns["加床价格"];
                this.column预收款 = base.Columns["预收款"];
                this.column预定人 = base.Columns["预定人"];
                this.column预定公司 = base.Columns["预定公司"];
                this.column联系电话 = base.Columns["联系电话"];
                this.column备注 = base.Columns["备注"];
                this.column操作员 = base.Columns["操作员"];
                this.column业务员 = base.Columns["业务员"];
                this.column早餐 = base.Columns["早餐"];
                this.column叫醒 = base.Columns["叫醒"];
                this.column保密 = base.Columns["保密"];
                this.columnvip = base.Columns["vip"];
                this.column电话等级 = base.Columns["电话等级"];
                this.column特要说明 = base.Columns["特要说明"];
                this.column应收帐款 = base.Columns["应收帐款"];
                this.column是否结帐 = base.Columns["是否结帐"];
                this.column结帐金额 = base.Columns["结帐金额"];
                this.column结帐日期 = base.Columns["结帐日期"];
                this.column付款方式 = base.Columns["付款方式"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column入住单号 = new System.Data.DataColumn("入住单号", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column入住单号);
                this.column预定单号 = new System.Data.DataColumn("预定单号", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column预定单号);
                this.column会员编号 = new System.Data.DataColumn("会员编号", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column会员编号);
                this.column客房类型 = new System.Data.DataColumn("客房类型", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column客房类型);
                this.column抵店时间 = new System.Data.DataColumn("抵店时间", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column抵店时间);
                this.column离店时间 = new System.Data.DataColumn("离店时间", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column离店时间);
                this.column单据状态 = new System.Data.DataColumn("单据状态", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column单据状态);
                this.column入住人数 = new System.Data.DataColumn("入住人数", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column入住人数);
                this.column客房编号 = new System.Data.DataColumn("客房编号", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column客房编号);
                this.column客房价格 = new System.Data.DataColumn("客房价格", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column客房价格);
                this.column入住价格 = new System.Data.DataColumn("入住价格", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column入住价格);
                this.column折扣 = new System.Data.DataColumn("折扣", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column折扣);
                this.column折扣原因 = new System.Data.DataColumn("折扣原因", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column折扣原因);
                this.column是否加床 = new System.Data.DataColumn("是否加床", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column是否加床);
                this.column加床价格 = new System.Data.DataColumn("加床价格", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column加床价格);
                this.column预收款 = new System.Data.DataColumn("预收款", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column预收款);
                this.column预定人 = new System.Data.DataColumn("预定人", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column预定人);
                this.column预定公司 = new System.Data.DataColumn("预定公司", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column预定公司);
                this.column联系电话 = new System.Data.DataColumn("联系电话", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column联系电话);
                this.column备注 = new System.Data.DataColumn("备注", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.column操作员 = new System.Data.DataColumn("操作员", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column操作员);
                this.column业务员 = new System.Data.DataColumn("业务员", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column业务员);
                this.column早餐 = new System.Data.DataColumn("早餐", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column早餐);
                this.column叫醒 = new System.Data.DataColumn("叫醒", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column叫醒);
                this.column保密 = new System.Data.DataColumn("保密", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column保密);
                this.columnvip = new System.Data.DataColumn("vip", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnvip);
                this.column电话等级 = new System.Data.DataColumn("电话等级", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column电话等级);
                this.column特要说明 = new System.Data.DataColumn("特要说明", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column特要说明);
                this.column应收帐款 = new System.Data.DataColumn("应收帐款", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column应收帐款);
                this.column是否结帐 = new System.Data.DataColumn("是否结帐", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column是否结帐);
                this.column结帐金额 = new System.Data.DataColumn("结帐金额", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column结帐金额);
                this.column结帐日期 = new System.Data.DataColumn("结帐日期", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column结帐日期);
                this.column付款方式 = new System.Data.DataColumn("付款方式", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column付款方式);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.column入住单号}, true));
                this.column入住单号.AllowDBNull = false;
                this.column入住单号.Unique = true;
                this.column是否加床.DefaultValue = ((bool)(false));
                this.column早餐.DefaultValue = ((bool)(false));
                this.column叫醒.DefaultValue = ((bool)(false));
                this.column保密.DefaultValue = ((bool)(false));
                this.columnvip.DefaultValue = ((bool)(false));
                this.column是否结帐.DefaultValue = ((bool)(false));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 入住单Row New入住单Row() {
                return ((入住单Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 入住单Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(入住单Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.入住单RowChanged != null)) {
                    this.入住单RowChanged(this, new 入住单RowChangeEvent(((入住单Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.入住单RowChanging != null)) {
                    this.入住单RowChanging(this, new 入住单RowChangeEvent(((入住单Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.入住单RowDeleted != null)) {
                    this.入住单RowDeleted(this, new 入住单RowChangeEvent(((入住单Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.入住单RowDeleting != null)) {
                    this.入住单RowDeleting(this, new 入住单RowChangeEvent(((入住单Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove入住单Row(入住单Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "入住单DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 客房类型DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn column类型编号;
            
            private System.Data.DataColumn column类型名称;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客房类型DataTable() {
                this.TableName = "客房类型";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 客房类型DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 客房类型DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 类型编号Column {
                get {
                    return this.column类型编号;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 类型名称Column {
                get {
                    return this.column类型名称;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客房类型Row this[int index] {
                get {
                    return ((客房类型Row)(this.Rows[index]));
                }
            }
            
            public event 客房类型RowChangeEventHandler 客房类型RowChanging;
            
            public event 客房类型RowChangeEventHandler 客房类型RowChanged;
            
            public event 客房类型RowChangeEventHandler 客房类型RowDeleting;
            
            public event 客房类型RowChangeEventHandler 客房类型RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add客房类型Row(客房类型Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客房类型Row Add客房类型Row(string 类型编号, string 类型名称) {
                客房类型Row row客房类型Row = ((客房类型Row)(this.NewRow()));
                row客房类型Row.ItemArray = new object[] {
                        类型编号,
                        类型名称};
                this.Rows.Add(row客房类型Row);
                return row客房类型Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客房类型Row FindBy类型编号(string 类型编号) {
                return ((客房类型Row)(this.Rows.Find(new object[] {
                            类型编号})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                客房类型DataTable cln = ((客房类型DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 客房类型DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column类型编号 = base.Columns["类型编号"];
                this.column类型名称 = base.Columns["类型名称"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column类型编号 = new System.Data.DataColumn("类型编号", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column类型编号);
                this.column类型名称 = new System.Data.DataColumn("类型名称", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column类型名称);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.column类型编号}, true));
                this.column类型编号.AllowDBNull = false;
                this.column类型编号.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客房类型Row New客房类型Row() {
                return ((客房类型Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 客房类型Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(客房类型Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.客房类型RowChanged != null)) {
                    this.客房类型RowChanged(this, new 客房类型RowChangeEvent(((客房类型Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.客房类型RowChanging != null)) {
                    this.客房类型RowChanging(this, new 客房类型RowChangeEvent(((客房类型Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.客房类型RowDeleted != null)) {
                    this.客房类型RowDeleted(this, new 客房类型RowChangeEvent(((客房类型Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.客房类型RowDeleting != null)) {
                    this.客房类型RowDeleting(this, new 客房类型RowChangeEvent(((客房类型Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove客房类型Row(客房类型Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "客房类型DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 帐单明细DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn column帐单编号;
            
            private System.Data.DataColumn column入住单号;
            
            private System.Data.DataColumn column消费内容;
            
            private System.Data.DataColumn column消费金额;
            
            private System.Data.DataColumn column消费时间;
            
            private System.Data.DataColumn column备注;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 帐单明细DataTable() {
                this.TableName = "帐单明细";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 帐单明细DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 帐单明细DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 帐单编号Column {
                get {
                    return this.column帐单编号;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 入住单号Column {
                get {
                    return this.column入住单号;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 消费内容Column {
                get {
                    return this.column消费内容;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 消费金额Column {
                get {
                    return this.column消费金额;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 消费时间Column {
                get {
                    return this.column消费时间;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 帐单明细Row this[int index] {
                get {
                    return ((帐单明细Row)(this.Rows[index]));
                }
            }
            
            public event 帐单明细RowChangeEventHandler 帐单明细RowChanging;
            
            public event 帐单明细RowChangeEventHandler 帐单明细RowChanged;
            
            public event 帐单明细RowChangeEventHandler 帐单明细RowDeleting;
            
            public event 帐单明细RowChangeEventHandler 帐单明细RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add帐单明细Row(帐单明细Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 帐单明细Row Add帐单明细Row(string 入住单号, string 消费内容, decimal 消费金额, System.DateTime 消费时间, string 备注) {
                帐单明细Row row帐单明细Row = ((帐单明细Row)(this.NewRow()));
                row帐单明细Row.ItemArray = new object[] {
                        null,
                        入住单号,
                        消费内容,
                        消费金额,
                        消费时间,
                        备注};
                this.Rows.Add(row帐单明细Row);
                return row帐单明细Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 帐单明细Row FindBy帐单编号(int 帐单编号) {
                return ((帐单明细Row)(this.Rows.Find(new object[] {
                            帐单编号})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                帐单明细DataTable cln = ((帐单明细DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new 帐单明细DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column帐单编号 = base.Columns["帐单编号"];
                this.column入住单号 = base.Columns["入住单号"];
                this.column消费内容 = base.Columns["消费内容"];
                this.column消费金额 = base.Columns["消费金额"];
                this.column消费时间 = base.Columns["消费时间"];
                this.column备注 = base.Columns["备注"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column帐单编号 = new System.Data.DataColumn("帐单编号", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column帐单编号);
                this.column入住单号 = new System.Data.DataColumn("入住单号", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column入住单号);
                this.column消费内容 = new System.Data.DataColumn("消费内容", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column消费内容);
                this.column消费金额 = new System.Data.DataColumn("消费金额", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column消费金额);
                this.column消费时间 = new System.Data.DataColumn("消费时间", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column消费时间);
                this.column备注 = new System.Data.DataColumn("备注", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.column帐单编号}, true));
                this.column帐单编号.AutoIncrement = true;
                this.column帐单编号.AllowDBNull = false;
                this.column帐单编号.ReadOnly = true;
                this.column帐单编号.Unique = true;
                this.column入住单号.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 帐单明细Row New帐单明细Row() {
                return ((帐单明细Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new 帐单明细Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(帐单明细Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.帐单明细RowChanged != null)) {
                    this.帐单明细RowChanged(this, new 帐单明细RowChangeEvent(((帐单明细Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.帐单明细RowChanging != null)) {
                    this.帐单明细RowChanging(this, new 帐单明细RowChangeEvent(((帐单明细Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.帐单明细RowDeleted != null)) {
                    this.帐单明细RowDeleted(this, new 帐单明细RowChangeEvent(((帐单明细Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.帐单明细RowDeleting != null)) {
                    this.帐单明细RowDeleting(this, new 帐单明细RowChangeEvent(((帐单明细Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove帐单明细Row(帐单明细Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                DataSet2 ds = new DataSet2();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "帐单明细DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 预定单Row : System.Data.DataRow {
            
            private 预定单DataTable table预定单;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 预定单Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table预定单 = ((预定单DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 预定单号 {
                get {
                    return ((string)(this[this.table预定单.预定单号Column]));
                }
                set {
                    this[this.table预定单.预定单号Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 会员编号 {
                get {
                    try {
                        return ((int)(this[this.table预定单.会员编号Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“会员编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.会员编号Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 客房类型 {
                get {
                    return ((string)(this[this.table预定单.客房类型Column]));
                }
                set {
                    this[this.table预定单.客房类型Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 抵店时间 {
                get {
                    return ((System.DateTime)(this[this.table预定单.抵店时间Column]));
                }
                set {
                    this[this.table预定单.抵店时间Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 离店时间 {
                get {
                    try {
                        return ((System.DateTime)(this[this.table预定单.离店时间Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“离店时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.离店时间Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.table预定单.单据状态Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.单据状态Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 入住人数 {
                get {
                    try {
                        return ((int)(this[this.table预定单.入住人数Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“入住人数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.入住人数Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 客房编号 {
                get {
                    try {
                        return ((string)(this[this.table预定单.客房编号Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“客房编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.客房编号Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 客房价格 {
                get {
                    try {
                        return ((decimal)(this[this.table预定单.客房价格Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“客房价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.客房价格Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 入住价格 {
                get {
                    try {
                        return ((decimal)(this[this.table预定单.入住价格Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“入住价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.入住价格Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 折扣 {
                get {
                    try {
                        return ((decimal)(this[this.table预定单.折扣Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“折扣”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.折扣Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 折扣原因 {
                get {
                    try {
                        return ((string)(this[this.table预定单.折扣原因Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“折扣原因”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.折扣原因Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否加床 {
                get {
                    try {
                        return ((bool)(this[this.table预定单.是否加床Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“是否加床”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.是否加床Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 加床价格 {
                get {
                    try {
                        return ((decimal)(this[this.table预定单.加床价格Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“加床价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.加床价格Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 预收款 {
                get {
                    try {
                        return ((decimal)(this[this.table预定单.预收款Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“预收款”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.预收款Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 预定人 {
                get {
                    try {
                        return ((string)(this[this.table预定单.预定人Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“预定人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.预定人Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 预定公司 {
                get {
                    try {
                        return ((string)(this[this.table预定单.预定公司Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“预定公司”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.预定公司Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 联系电话 {
                get {
                    try {
                        return ((string)(this[this.table预定单.联系电话Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“联系电话”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.联系电话Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.table预定单.备注Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.备注Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 操作员 {
                get {
                    try {
                        return ((string)(this[this.table预定单.操作员Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“操作员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.操作员Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 业务员 {
                get {
                    try {
                        return ((string)(this[this.table预定单.业务员Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“预定单”中列“业务员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预定单.业务员Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is会员编号Null() {
                return this.IsNull(this.table预定单.会员编号Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set会员编号Null() {
                this[this.table预定单.会员编号Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is离店时间Null() {
                return this.IsNull(this.table预定单.离店时间Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set离店时间Null() {
                this[this.table预定单.离店时间Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.table预定单.单据状态Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.table预定单.单据状态Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入住人数Null() {
                return this.IsNull(this.table预定单.入住人数Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入住人数Null() {
                this[this.table预定单.入住人数Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is客房编号Null() {
                return this.IsNull(this.table预定单.客房编号Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set客房编号Null() {
                this[this.table预定单.客房编号Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is客房价格Null() {
                return this.IsNull(this.table预定单.客房价格Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set客房价格Null() {
                this[this.table预定单.客房价格Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入住价格Null() {
                return this.IsNull(this.table预定单.入住价格Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入住价格Null() {
                this[this.table预定单.入住价格Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is折扣Null() {
                return this.IsNull(this.table预定单.折扣Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set折扣Null() {
                this[this.table预定单.折扣Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is折扣原因Null() {
                return this.IsNull(this.table预定单.折扣原因Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set折扣原因Null() {
                this[this.table预定单.折扣原因Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否加床Null() {
                return this.IsNull(this.table预定单.是否加床Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否加床Null() {
                this[this.table预定单.是否加床Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is加床价格Null() {
                return this.IsNull(this.table预定单.加床价格Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set加床价格Null() {
                this[this.table预定单.加床价格Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预收款Null() {
                return this.IsNull(this.table预定单.预收款Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预收款Null() {
                this[this.table预定单.预收款Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预定人Null() {
                return this.IsNull(this.table预定单.预定人Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预定人Null() {
                this[this.table预定单.预定人Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预定公司Null() {
                return this.IsNull(this.table预定单.预定公司Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预定公司Null() {
                this[this.table预定单.预定公司Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is联系电话Null() {
                return this.IsNull(this.table预定单.联系电话Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set联系电话Null() {
                this[this.table预定单.联系电话Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.table预定单.备注Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.table预定单.备注Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is操作员Null() {
                return this.IsNull(this.table预定单.操作员Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set操作员Null() {
                this[this.table预定单.操作员Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is业务员Null() {
                return this.IsNull(this.table预定单.业务员Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set业务员Null() {
                this[this.table预定单.业务员Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 入住单Row : System.Data.DataRow {
            
            private 入住单DataTable table入住单;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 入住单Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table入住单 = ((入住单DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 入住单号 {
                get {
                    return ((string)(this[this.table入住单.入住单号Column]));
                }
                set {
                    this[this.table入住单.入住单号Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 预定单号 {
                get {
                    try {
                        return ((string)(this[this.table入住单.预定单号Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“预定单号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.预定单号Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 会员编号 {
                get {
                    try {
                        return ((int)(this[this.table入住单.会员编号Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“会员编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.会员编号Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 客房类型 {
                get {
                    try {
                        return ((string)(this[this.table入住单.客房类型Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“客房类型”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.客房类型Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 抵店时间 {
                get {
                    try {
                        return ((System.DateTime)(this[this.table入住单.抵店时间Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“抵店时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.抵店时间Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 离店时间 {
                get {
                    try {
                        return ((System.DateTime)(this[this.table入住单.离店时间Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“离店时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.离店时间Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 单据状态 {
                get {
                    try {
                        return ((string)(this[this.table入住单.单据状态Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“单据状态”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.单据状态Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 入住人数 {
                get {
                    try {
                        return ((int)(this[this.table入住单.入住人数Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“入住人数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.入住人数Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 客房编号 {
                get {
                    try {
                        return ((string)(this[this.table入住单.客房编号Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“客房编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.客房编号Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 客房价格 {
                get {
                    try {
                        return ((decimal)(this[this.table入住单.客房价格Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“客房价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.客房价格Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 入住价格 {
                get {
                    try {
                        return ((decimal)(this[this.table入住单.入住价格Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“入住价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.入住价格Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 折扣 {
                get {
                    try {
                        return ((decimal)(this[this.table入住单.折扣Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“折扣”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.折扣Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 折扣原因 {
                get {
                    try {
                        return ((string)(this[this.table入住单.折扣原因Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“折扣原因”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.折扣原因Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否加床 {
                get {
                    try {
                        return ((bool)(this[this.table入住单.是否加床Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“是否加床”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.是否加床Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 加床价格 {
                get {
                    try {
                        return ((decimal)(this[this.table入住单.加床价格Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“加床价格”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.加床价格Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 预收款 {
                get {
                    try {
                        return ((decimal)(this[this.table入住单.预收款Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“预收款”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.预收款Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 预定人 {
                get {
                    try {
                        return ((string)(this[this.table入住单.预定人Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“预定人”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.预定人Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 预定公司 {
                get {
                    try {
                        return ((string)(this[this.table入住单.预定公司Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“预定公司”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.预定公司Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 联系电话 {
                get {
                    try {
                        return ((string)(this[this.table入住单.联系电话Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“联系电话”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.联系电话Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.table入住单.备注Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.备注Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 操作员 {
                get {
                    try {
                        return ((string)(this[this.table入住单.操作员Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“操作员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.操作员Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 业务员 {
                get {
                    try {
                        return ((string)(this[this.table入住单.业务员Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“业务员”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.业务员Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 早餐 {
                get {
                    try {
                        return ((bool)(this[this.table入住单.早餐Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“早餐”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.早餐Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 叫醒 {
                get {
                    try {
                        return ((bool)(this[this.table入住单.叫醒Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“叫醒”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.叫醒Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 保密 {
                get {
                    try {
                        return ((bool)(this[this.table入住单.保密Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“保密”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.保密Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool vip {
                get {
                    try {
                        return ((bool)(this[this.table入住单.vipColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“vip”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.vipColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 电话等级 {
                get {
                    try {
                        return ((string)(this[this.table入住单.电话等级Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“电话等级”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.电话等级Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 特要说明 {
                get {
                    try {
                        return ((string)(this[this.table入住单.特要说明Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“特要说明”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.特要说明Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 应收帐款 {
                get {
                    try {
                        return ((decimal)(this[this.table入住单.应收帐款Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“应收帐款”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.应收帐款Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool 是否结帐 {
                get {
                    try {
                        return ((bool)(this[this.table入住单.是否结帐Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“是否结帐”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.是否结帐Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 结帐金额 {
                get {
                    try {
                        return ((decimal)(this[this.table入住单.结帐金额Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“结帐金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.结帐金额Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 结帐日期 {
                get {
                    try {
                        return ((System.DateTime)(this[this.table入住单.结帐日期Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“结帐日期”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.结帐日期Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 付款方式 {
                get {
                    try {
                        return ((string)(this[this.table入住单.付款方式Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“入住单”中列“付款方式”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table入住单.付款方式Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预定单号Null() {
                return this.IsNull(this.table入住单.预定单号Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预定单号Null() {
                this[this.table入住单.预定单号Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is会员编号Null() {
                return this.IsNull(this.table入住单.会员编号Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set会员编号Null() {
                this[this.table入住单.会员编号Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is客房类型Null() {
                return this.IsNull(this.table入住单.客房类型Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set客房类型Null() {
                this[this.table入住单.客房类型Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is抵店时间Null() {
                return this.IsNull(this.table入住单.抵店时间Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set抵店时间Null() {
                this[this.table入住单.抵店时间Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is离店时间Null() {
                return this.IsNull(this.table入住单.离店时间Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set离店时间Null() {
                this[this.table入住单.离店时间Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is单据状态Null() {
                return this.IsNull(this.table入住单.单据状态Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set单据状态Null() {
                this[this.table入住单.单据状态Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入住人数Null() {
                return this.IsNull(this.table入住单.入住人数Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入住人数Null() {
                this[this.table入住单.入住人数Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is客房编号Null() {
                return this.IsNull(this.table入住单.客房编号Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set客房编号Null() {
                this[this.table入住单.客房编号Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is客房价格Null() {
                return this.IsNull(this.table入住单.客房价格Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set客房价格Null() {
                this[this.table入住单.客房价格Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入住价格Null() {
                return this.IsNull(this.table入住单.入住价格Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入住价格Null() {
                this[this.table入住单.入住价格Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is折扣Null() {
                return this.IsNull(this.table入住单.折扣Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set折扣Null() {
                this[this.table入住单.折扣Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is折扣原因Null() {
                return this.IsNull(this.table入住单.折扣原因Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set折扣原因Null() {
                this[this.table入住单.折扣原因Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否加床Null() {
                return this.IsNull(this.table入住单.是否加床Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否加床Null() {
                this[this.table入住单.是否加床Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is加床价格Null() {
                return this.IsNull(this.table入住单.加床价格Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set加床价格Null() {
                this[this.table入住单.加床价格Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预收款Null() {
                return this.IsNull(this.table入住单.预收款Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预收款Null() {
                this[this.table入住单.预收款Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预定人Null() {
                return this.IsNull(this.table入住单.预定人Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预定人Null() {
                this[this.table入住单.预定人Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is预定公司Null() {
                return this.IsNull(this.table入住单.预定公司Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set预定公司Null() {
                this[this.table入住单.预定公司Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is联系电话Null() {
                return this.IsNull(this.table入住单.联系电话Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set联系电话Null() {
                this[this.table入住单.联系电话Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.table入住单.备注Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.table入住单.备注Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is操作员Null() {
                return this.IsNull(this.table入住单.操作员Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set操作员Null() {
                this[this.table入住单.操作员Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is业务员Null() {
                return this.IsNull(this.table入住单.业务员Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set业务员Null() {
                this[this.table入住单.业务员Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is早餐Null() {
                return this.IsNull(this.table入住单.早餐Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set早餐Null() {
                this[this.table入住单.早餐Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is叫醒Null() {
                return this.IsNull(this.table入住单.叫醒Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set叫醒Null() {
                this[this.table入住单.叫醒Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is保密Null() {
                return this.IsNull(this.table入住单.保密Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set保密Null() {
                this[this.table入住单.保密Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvipNull() {
                return this.IsNull(this.table入住单.vipColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvipNull() {
                this[this.table入住单.vipColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is电话等级Null() {
                return this.IsNull(this.table入住单.电话等级Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set电话等级Null() {
                this[this.table入住单.电话等级Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is特要说明Null() {
                return this.IsNull(this.table入住单.特要说明Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set特要说明Null() {
                this[this.table入住单.特要说明Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is应收帐款Null() {
                return this.IsNull(this.table入住单.应收帐款Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set应收帐款Null() {
                this[this.table入住单.应收帐款Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is是否结帐Null() {
                return this.IsNull(this.table入住单.是否结帐Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set是否结帐Null() {
                this[this.table入住单.是否结帐Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is结帐金额Null() {
                return this.IsNull(this.table入住单.结帐金额Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set结帐金额Null() {
                this[this.table入住单.结帐金额Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is结帐日期Null() {
                return this.IsNull(this.table入住单.结帐日期Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set结帐日期Null() {
                this[this.table入住单.结帐日期Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is付款方式Null() {
                return this.IsNull(this.table入住单.付款方式Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set付款方式Null() {
                this[this.table入住单.付款方式Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 客房类型Row : System.Data.DataRow {
            
            private 客房类型DataTable table客房类型;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 客房类型Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table客房类型 = ((客房类型DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 类型编号 {
                get {
                    return ((string)(this[this.table客房类型.类型编号Column]));
                }
                set {
                    this[this.table客房类型.类型编号Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 类型名称 {
                get {
                    try {
                        return ((string)(this[this.table客房类型.类型名称Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“客房类型”中列“类型名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table客房类型.类型名称Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is类型名称Null() {
                return this.IsNull(this.table客房类型.类型名称Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set类型名称Null() {
                this[this.table客房类型.类型名称Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 帐单明细Row : System.Data.DataRow {
            
            private 帐单明细DataTable table帐单明细;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 帐单明细Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table帐单明细 = ((帐单明细DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int 帐单编号 {
                get {
                    return ((int)(this[this.table帐单明细.帐单编号Column]));
                }
                set {
                    this[this.table帐单明细.帐单编号Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 入住单号 {
                get {
                    return ((string)(this[this.table帐单明细.入住单号Column]));
                }
                set {
                    this[this.table帐单明细.入住单号Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 消费内容 {
                get {
                    try {
                        return ((string)(this[this.table帐单明细.消费内容Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“帐单明细”中列“消费内容”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table帐单明细.消费内容Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 消费金额 {
                get {
                    try {
                        return ((decimal)(this[this.table帐单明细.消费金额Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“帐单明细”中列“消费金额”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table帐单明细.消费金额Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 消费时间 {
                get {
                    try {
                        return ((System.DateTime)(this[this.table帐单明细.消费时间Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“帐单明细”中列“消费时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table帐单明细.消费时间Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.table帐单明细.备注Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“帐单明细”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table帐单明细.备注Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is消费内容Null() {
                return this.IsNull(this.table帐单明细.消费内容Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set消费内容Null() {
                this[this.table帐单明细.消费内容Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is消费金额Null() {
                return this.IsNull(this.table帐单明细.消费金额Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set消费金额Null() {
                this[this.table帐单明细.消费金额Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is消费时间Null() {
                return this.IsNull(this.table帐单明细.消费时间Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set消费时间Null() {
                this[this.table帐单明细.消费时间Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.table帐单明细.备注Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.table帐单明细.备注Column] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 预定单RowChangeEvent : System.EventArgs {
            
            private 预定单Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预定单RowChangeEvent(预定单Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 预定单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 入住单RowChangeEvent : System.EventArgs {
            
            private 入住单Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 入住单RowChangeEvent(入住单Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 入住单Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 客房类型RowChangeEvent : System.EventArgs {
            
            private 客房类型Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客房类型RowChangeEvent(客房类型Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 客房类型Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 帐单明细RowChangeEvent : System.EventArgs {
            
            private 帐单明细Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 帐单明细RowChangeEvent(帐单明细Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 帐单明细Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591